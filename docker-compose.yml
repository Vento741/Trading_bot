version: '3.8'

services:
  trading_bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading_bot
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./data:/app/data
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - trading_network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: trading_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - trading_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: trading_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trading_network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: trading_prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - trading_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: trading_grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    networks:
      - trading_network
    restart: unless-stopped

networks:
  trading_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: